package sftypes

import (
	"github.com/ottemo/mapstructure"
	"reflect"
)

type CHAPSecret struct {
	Secret string
}

func CHAPSecretDecodeHook(from reflect.Kind, to reflect.Kind, v interface{}) (interface{}, error) {

	if from == reflect.String && to == reflect.TypeOf(CHAPSecret{}).Kind() {
		return map[string]string{"Secret": v.(string)}, nil
	}

	return v, nil
}

func GetAccountResultDecodeHookConfig(result *GetAccountResult) *mapstructure.DecoderConfig {
	return &mapstructure.DecoderConfig{
		DecodeHook: CHAPSecretDecodeHook,
		Result:     result,
	}
}

func ListAccountsResultDecodeHookConfig(result *ListAccountsResult) *mapstructure.DecoderConfig {
	return &mapstructure.DecoderConfig{
		DecodeHook: CHAPSecretDecodeHook,
		Result:     result,
	}
}

func AutoGeneratedCHAPSecret() CHAPSecret {
	return CHAPSecret{Secret: CHAPSecretAutoGenerate()}
}

func CHAPSecretAutoGenerate() string { return "AUTO-GENERATE" }

type Frequency struct {
}
